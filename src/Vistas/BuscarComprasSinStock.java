/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;

import Controladores.ClienteJpaController;
import Controladores.ComprasinStockJpaController;
import Entidades.Almacen;
import Entidades.ComprasinStock;
import Facade.FacadeComprasinStock;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pablo
 */
public class BuscarComprasSinStock extends javax.swing.JDialog {
    DefaultTableModel modelo=new DefaultTableModel();
    public static ComprasinStock compra;
    /**
     * Creates new form BuscarComprasSinStock
     */
    public BuscarComprasSinStock(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jLabel1.text")); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jButton1.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jLabel2.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jTextField1.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jLabel4.text")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "CERRADO", "A SALDAR" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        jButton2.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/back.png"))); // NOI18N
        jButton3.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jButton3.text")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(BuscarComprasSinStock.class, "BuscarComprasSinStock.jLabel5.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jXDatePicker1.getDate()!=null && jXDatePicker2.getDate()!=null && jTextField1.getText().equals("")&&jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxFecha();
        }
        if(jXDatePicker1.getDate()!=null && jXDatePicker2.getDate()!=null && jTextField1.getText().equals("")&&!jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxFechayestado();
        }
        if(jXDatePicker1.getDate()!=null && jXDatePicker2.getDate()!=null && !jTextField1.getText().equals("")&&jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxFechayProvedor();
        }
        if(jXDatePicker1.getDate()!=null && jXDatePicker2.getDate()!=null && !jTextField1.getText().equals("")&&!jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxFechayProvedorEstado();
        }
        if(jXDatePicker1.getDate()==null && jXDatePicker2.getDate()==null && !jTextField1.getText().equals("")&&jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxProvedor();
        }
         if(jXDatePicker1.getDate()==null && jXDatePicker2.getDate()==null && !jTextField1.getText().equals("")&&jComboBox1.getSelectedItem().toString().equals("TODOS")){
        buscarxProvedoryEstado();
        }
        if(jXDatePicker1.getDate()==null && jXDatePicker2.getDate()==null && jTextField1.getText().equals("")&&jComboBox1.getSelectedItem().toString().equals("TODOS")){
            listar();
        }
        if(jXDatePicker1.getDate()==null && jXDatePicker2.getDate()==null && jTextField1.getText().equals("")&&!jComboBox1.getSelectedItem().toString().equals("TODOS")){
            listarEstado();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
      EntityManagerFactory emf = Persistence.createEntityManagerFactory("pintureriaPU");  
      String valorTabla=(jTable1.getValueAt(jTable1.getSelectedRow(),0)).toString();
      Long valor=Long.parseLong(valorTabla);
      compra= new ComprasinStockJpaController(emf).findComprasinStock(valor);
      JOptionPane.showMessageDialog(rootPane, "Selecciono la Compra:"+ compra.getId() +"");
      verPagosCompra ventana=new verPagosCompra(null, true);
      ventana.setVisible(true);
      }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarComprasSinStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarComprasSinStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarComprasSinStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarComprasSinStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BuscarComprasSinStock dialog = new BuscarComprasSinStock(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
    jTextField1.setEnabled(true);
    jXDatePicker1.setEnabled(true);
    jXDatePicker1.setFormats("dd/MM/yyyy");
    jXDatePicker2.setEnabled(true);
    jXDatePicker2.setFormats("dd/MM/yyyy");
    jComboBox1.setEnabled(true);
    inicializarTabla();
    if(Menu.opcion==10){
    jTextField1.setEnabled(true);
    jXDatePicker1.setEnabled(true);
    jXDatePicker1.setFormats("dd/MM/yyyy");
    jXDatePicker2.setEnabled(true);
    jXDatePicker2.setFormats("dd/MM/yyyy");
    jComboBox1.setEnabled(false);
    jComboBox1.setSelectedItem("A SALDAR");
    inicializarTabla();
    }
     if(Menu.opcion==11){
    jTextField1.setEnabled(true);
    jXDatePicker1.setEnabled(true);
    jXDatePicker1.setFormats("dd/MM/yyyy");
    jXDatePicker2.setEnabled(true);
    jXDatePicker2.setFormats("dd/MM/yyyy");
    jComboBox1.setEnabled(false);
    jComboBox1.setSelectedItem("A SALDAR");
    inicializarTabla();
    }
    }

    private void inicializarTabla() {
    
    modelo.addColumn("Id");
    modelo.addColumn("Fecha");
    modelo.addColumn("Provedor");
    modelo.addColumn("monto");
    modelo.addColumn("saldo");
    modelo.addColumn("estado");
    jTable1.setModel(modelo);
    }

    private void buscarxFecha() {
        SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
        EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxFecha(jXDatePicker1.getDate(), jXDatePicker2.getDate());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }

    private void buscarxFechayestado() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxFechae(jXDatePicker1.getDate(), jXDatePicker2.getDate(),jComboBox1.getSelectedItem().toString());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
          String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }

    private void buscarxFechayProvedor() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxFechaProv(jXDatePicker1.getDate(), jXDatePicker2.getDate(),jTextField1.getText().toUpperCase());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
         String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);    
    }

    private void buscarxFechayProvedorEstado() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxFechaProve(jXDatePicker1.getDate(), jXDatePicker2.getDate(),jTextField1.getText().toUpperCase(),jComboBox1.getSelectedItem().toString());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
          String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);   
    }

    private void listar() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().listar();
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
       String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla); 
    }

    private void buscarxProvedor() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxprovedor(jTextField1.getText().toUpperCase());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }

    private void buscarxProvedoryEstado() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().buscarxprovedore(jTextField1.getText().toUpperCase(),jComboBox1.getSelectedItem().toString());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }

    private void listarEstado() {
          SimpleDateFormat formato=new SimpleDateFormat("dd-MM-yyyy");
      
    EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<ComprasinStock> listaproducto= new FacadeComprasinStock().listare(jComboBox1.getSelectedItem().toString());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Monto");
        modeloTabla.addColumn("Saldo");
        modeloTabla.addColumn("Estado");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        String MyFecha = formato.format(listaproducto.get(i).getFecha());
        vector.add(MyFecha);
        vector.add(listaproducto.get(i).getProveedor().getNombre());
        vector.add(listaproducto.get(i).getPrecio_totol());
        vector.add(listaproducto.get(i).getCuenta().getSaldo());
        vector.add(listaproducto.get(i).getCuenta().getEstado());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }
}
