/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.ExpedienteJpaController;
import Entidades.Detalle_Expediente;
import Entidades.Expediente;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Walter
 */
public class jfCrearEditarExpediente extends javax.swing.JFrame {

    public Vector vector;
    private DefaultTableModel modelo;
    private Detalle_Expediente detalleExpedienteJF;
    private List<Detalle_Expediente> listaDetalleExpte;
    public Expediente expteJF;
    public boolean editar = false;

    /**
     * Creates new form jfCrearEditarExpediente
     */
    public jfCrearEditarExpediente() {
        initComponents();
        setLocationRelativeTo(null);
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtExtracto = new javax.swing.JTextField();
        txtOrganismo = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();
        jdpFechaInicio = new org.jdesktop.swingx.JXDatePicker();
        jdpFechaFin = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetallesExpte = new javax.swing.JTable();
        btnAgregarDetalle = new javax.swing.JButton();
        btnEliminarDetalle = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), org.openide.util.NbBundle.getMessage(jfCrearEditarExpediente.class, "jfCrearEditarExpediente.jPanel1.border.title"))); // NOI18N

        jLabel1.setText("Fecha inicio:"); // NOI18N

        jLabel2.setText("Fecha fin:"); // NOI18N

        jLabel4.setText("Codigo"); // NOI18N

        jLabel10.setText("Extracto"); // NOI18N

        jLabel9.setText("Organismo"); // NOI18N

        jLabel7.setText("Estado"); // NOI18N

        jLabel8.setText("Monto"); // NOI18N

        txtCodigo.setText(""); // NOI18N
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtExtracto.setText(""); // NOI18N

        txtOrganismo.setText(""); // NOI18N

        txtEstado.setText(""); // NOI18N

        txtMonto.setEditable(false);
        txtMonto.setText(""); // NOI18N

        tblDetallesExpte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDetallesExpte);

        btnAgregarDetalle.setText("Agregar"); // NOI18N
        btnAgregarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDetalleActionPerformed(evt);
            }
        });

        btnEliminarDetalle.setText("Eliminar"); // NOI18N
        btnEliminarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDetalleActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar"); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar"); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jdpFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtOrganismo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtExtracto, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(7, 7, 7)
                                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jdpFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(btnGuardar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAgregarDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jdpFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jdpFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtExtracto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregarDetalle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarDetalle)
                        .addGap(75, 75, 75))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardar)
                            .addComponent(btnCancelar))
                        .addGap(14, 14, 14))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (editar){
            editarExistente();
        }else{
            guardarNuevo();
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAgregarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDetalleActionPerformed
        // TODO add your handling code here:
        jdCrearEditarDetalleExpediente jdcrearEditarExpediente = new jdCrearEditarDetalleExpediente(this, true);
        jdcrearEditarExpediente.setVisible(true);
        detalleExpedienteJF = jdcrearEditarExpediente.detalleExpedienteJD;

        Object[] object = new Object[4];
        object[0] = detalleExpedienteJF.getProducto().getId();
        object[1] = detalleExpedienteJF.getProducto().getDescripcion();
        object[2] = detalleExpedienteJF.getPrecio();
        object[3] = detalleExpedienteJF.getCantidad();

        modelo.addRow(object);
        listaDetalleExpte.add(detalleExpedienteJF);

    }//GEN-LAST:event_btnAgregarDetalleActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDetalleActionPerformed
        // TODO add your handling code here:
        int index;
        if(tblDetallesExpte.getSelectedRow()!=-1){
         //EntityManagerFactory emf = Persistence.createEntityManagerFactory("pintureriaPU");  
         //String valorTabla=(tblExpte.getValueAt(tblExpte.getSelectedRow(),0)).toString();
         //Long valor=Long.parseLong(valorTabla);
            index = tblDetallesExpte.getSelectedRow(); 
            listaDetalleExpte.remove(index);
            //tblDetallesExpte.remove(tblDetallesExpte.getSelectedRow());
            modelo.removeRow(index);
         
         //JOptionPane.showMessageDialog(rootPane, "Seleccione la Venta del cliente: " + venta.getCliente().getApellido() +" "+venta.getCliente().getNombre());
         //System.out.print("Entro con op=0");
         }else{
            JOptionPane.showMessageDialog(rootPane, "Debe Seleccionar un elemento para eliminarlo de la lista");
        }
        
        
    }//GEN-LAST:event_btnEliminarDetalleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfCrearEditarExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfCrearEditarExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfCrearEditarExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfCrearEditarExpediente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfCrearEditarExpediente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDetalle;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarDetalle;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXDatePicker jdpFechaFin;
    private org.jdesktop.swingx.JXDatePicker jdpFechaInicio;
    private javax.swing.JTable tblDetallesExpte;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtExtracto;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtOrganismo;
    // End of variables declaration//GEN-END:variables

    private void limpiarComponentes() {
        jdpFechaFin.setDate(null);
        jdpFechaInicio.setDate(null);
        txtCodigo.setText(null);
        txtEstado.setText(null);
        txtExtracto.setText(null);        
        txtMonto.setText(null);
        txtCodigo.setText(null);
        txtOrganismo.setText(null);

        inicializarComponentes();

    }

    private void inicializarComponentes() {
        listaDetalleExpte = new ArrayList<Detalle_Expediente>();
        modelo = new DefaultTableModel();

        modelo.addColumn("Id");
        modelo.addColumn("Producto");
        modelo.addColumn("Precio");
        modelo.addColumn("Cantidad");
        //modelo.addColumn("Producto");
        tblDetallesExpte.setModel(modelo);

    }

    public void cargarDatosEditar() {
        jdpFechaInicio.setDate(expteJF.getFechaInicio());
        jdpFechaFin.setDate(expteJF.getFechaFin());
        txtExtracto.setText(expteJF.getExtracto());
        txtOrganismo.setText(expteJF.getOrganismo());
        txtCodigo.setText(expteJF.getCodigo());
        txtEstado.setText(expteJF.getEstado());

        //inicializarComponentes();
        //List<Detalle_Expediente> lista;
        listaDetalleExpte = expteJF.getDetalle();
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modelo = new DefaultTableModel();

        Vector<String> columnas = new Vector<String>();
        modelo.addColumn("Id");
        modelo.addColumn("Producto");
        modelo.addColumn("Precio");
        modelo.addColumn("Cantidad");

        for (int i = 0; i < listaDetalleExpte.size(); i++) {
            Vector vector = new Vector();
            vector.add(listaDetalleExpte.get(i).getId());
            vector.add(listaDetalleExpte.get(i).getProducto().getDescripcion());
            vector.add(listaDetalleExpte.get(i).getPrecio());
            vector.add(listaDetalleExpte.get(i).getCantidad());

            modelo.addRow(vector);
        }
        tblDetallesExpte.setModel(modelo);

    }

    private boolean chequearCampos() {
        boolean exito = true;
        if (txtCodigo.getText().equals("")) {
            exito = false;
            txtCodigo.setBackground(Color.yellow);
            txtCodigo.requestFocusInWindow();
            JOptionPane.showMessageDialog(rootPane, "El campo Codigo no puede estar vacio");
            return exito;
            //txtLetra.setForeground(Color.red);

        }
        //extracto
        if (txtExtracto.getText().equals("")) {
            exito = false;
            txtExtracto.setBackground(Color.yellow);
            txtExtracto.requestFocusInWindow();
            JOptionPane.showMessageDialog(rootPane, "El campo Extracto no puede estar vacio");
            //txtLetra.setForeground(Color.red);
            return exito;

        }
        //organismo
        if (txtOrganismo.getText().equals("")) {
            exito = false;
            txtOrganismo.setBackground(Color.yellow);
            txtOrganismo.requestFocusInWindow();
            JOptionPane.showMessageDialog(rootPane, "El campo Organismo no puede estar vacio");
            return exito;
            //txtLetra.setForeground(Color.red);

        }
        //estado
        if (txtEstado.getText().equals("")) {
            exito = false;
            txtEstado.setBackground(Color.yellow);
            txtEstado.requestFocusInWindow();
            JOptionPane.showMessageDialog(rootPane, "El campo Estado no puede estar vacio");
            return exito;
            //txtLetra.setForeground(Color.red);

        }
        return exito;

    }

    private void guardarNuevo() {
        String codigo;

        if (chequearCampos()) {
            try {
                Expediente expediente = new Expediente();
                
                expediente.setExtracto(txtExtracto.getText());
                expediente.setFechaInicio(jdpFechaInicio.getDate());
                expediente.setFechaFin(jdpFechaFin.getDate());
                expediente.setEstado(txtEstado.getText());
                //expediente.setOrganismo(txtOrganismo.getText());
                
                
                expediente.setOrganismo(txtOrganismo.getText());
                //agrego la lista de detalles
                expediente.setDetalle(listaDetalleExpte);

                codigo = txtCodigo.getText();
                expediente.setCodigo(codigo);

                EntityManagerFactory emf = Persistence.createEntityManagerFactory("pintureriaPU");
                ExpedienteJpaController expedienteJpaController = new ExpedienteJpaController(emf);
                expedienteJpaController.create(expediente);
                JOptionPane.showMessageDialog(rootPane, "La operacion GUARDAR se realizo con exito");
                limpiarComponentes();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "La operacion no se pudo realizar hubo un problema");
                limpiarComponentes();
            }
        }
    }

    private void editarExistente() {
        String codigo;

        if (chequearCampos()) {
            try {
                //Expediente expediente = new Expediente();
                //expteJF.setAno((Integer.parseInt(txtAno.getText())));
                expteJF.setExtracto(txtExtracto.getText());
                expteJF.setFechaInicio(jdpFechaInicio.getDate());
                expteJF.setFechaFin(jdpFechaFin.getDate());
                expteJF.setEstado(txtEstado.getText());
                expteJF.setOrganismo(txtOrganismo.getText());
                
                //agrego la lista de detalles
                expteJF.setDetalle(listaDetalleExpte);

                codigo = txtCodigo.getText();
                expteJF.setCodigo(codigo);

                EntityManagerFactory emf = Persistence.createEntityManagerFactory("pintureriaPU");
                ExpedienteJpaController expedienteJpaController = new ExpedienteJpaController(emf);
                expedienteJpaController.edit(expteJF);
                JOptionPane.showMessageDialog(rootPane, "La operacion (EDITAR) se realizo con exito");
                limpiarComponentes();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "La operacion (EDITAR) no se pudo realizar hubo un problema"+e.getMessage().toString());
                limpiarComponentes();
            }
        }
    }
}
