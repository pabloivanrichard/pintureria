/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.AlmacenJpaController;
import Controladores.Cuenta_ClienteJpaController;
import Controladores.LocalizacionJpaController;
import Controladores.PagoClienteJpaController;
import Controladores.VentaJpaController;
import Controladores.exceptions.NonexistentEntityException;
import Entidades.Almacen;
import Entidades.Caja;
import Entidades.Cliente;
import Entidades.Cuenta_Cliente;
import Entidades.Datos_Contado;
import Entidades.Datos_Cuenta_Corriente;
import Entidades.Datos_Tarjeta;
import Entidades.Datos_cheque;
import Entidades.Detalle_Cuenta_Cliente;
import Entidades.Detalle_Venta;
import Entidades.Detalle_tipo_venta;
import Entidades.Localizacion;
import Entidades.PagoCliente;
import Entidades.Producto;
import Entidades.Tarjeta;
import Entidades.Tipo_Pago;
import Entidades.Tipo_Pago_;
import Entidades.Tipo_Venta;
import Entidades.Venta;
import Facade.FacadeAlmacen;
import Facade.FacadeCaja;
import Facade.FacadeCliente;
import Facade.FacadeCuentaCliente;
import Facade.FacadeLocalizacion;
import Facade.FacadeProducto;
import Facade.FacadeTarjeta;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author laura
 */
public class JfVenta extends javax.swing.JFrame {
    static int opcion=1;// variable que va a la pantalla cliente para agregar un cliente desde la venta
    Almacen productoAlmacen;
    DefaultTableModel modelo2=new DefaultTableModel();
    ArrayList<Almacen> listaAlmacen;
    Cliente cliente;
    Tarjeta tarjeta;
    static Venta venta;
    Venta venta_filtrado;
    static float totalfiltrado;
    //Datos que vienen de la ventana Forma de pago
     List<Datos_cheque> listacheques=new ArrayList<Datos_cheque>();
     List<Datos_Tarjeta> listatar=new ArrayList<Datos_Tarjeta>();
     List<Datos_Cuenta_Corriente> listacuentac=new ArrayList<Datos_Cuenta_Corriente>();
     String entrega;
     Datos_Contado contado=new Datos_Contado();
     static Tipo_Pago tipopago;
     int facturaemitida=0;
     int validarcajacerrada=0;
    /**
     * Creates new form Venta
     */
    public JfVenta() {
        initComponents();
         setLocationRelativeTo(null);
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Producto:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre:");

        jLabel3.setText("Descripcion del Producto:");

        jLabel4.setText("Proveedor:");

        jLabel5.setText("Precio Contado:");

        jLabel6.setText("Unidades Disponibles:");

        jLabel7.setText("Cantidad Requerida:");

        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jLabel8.setText("Detalle de la Venta:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/remove.png"))); // NOI18N
        jButton3.setText("Quitar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Total:$");

        jLabel10.setText("Tipo de Pago:");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/accept.png"))); // NOI18N
        jButton4.setText("Aceptar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/back.png"))); // NOI18N
        jButton5.setText("Volver");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel15.setText("Cliente:");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("+");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel13.setText("Fecha:");

        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField12KeyTyped(evt);
            }
        });

        jLabel16.setText("/");

        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField13KeyTyped(evt);
            }
        });

        jLabel17.setText("/");

        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField14KeyTyped(evt);
            }
        });

        jButton9.setText("jButton9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 204, 51));
        jButton8.setText(" Factura");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel11.setText("Codigo:");

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CONTADO", "TARJETA" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Localizacion:");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel14.setText("Unidades en el Area:");

        jLabel18.setText("Descuento:");

        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField10KeyTyped(evt);
            }
        });

        jButton11.setText("...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField14)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addGap(135, 135, 135))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(261, 261, 261))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jLabel14)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton9))
                .addGap(24, 24, 24)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
      if(jTable1.getSelectedRow()!=-1){
      EntityManagerFactory emf = Persistence.createEntityManagerFactory("pintureriaPU");  
      String valorTabla=(jTable1.getValueAt(jTable1.getSelectedRow(),0)).toString();
      Long valor=Long.parseLong(valorTabla);
      productoAlmacen=new AlmacenJpaController(emf).findAlmacen(valor);
      jTextField2.setText(productoAlmacen.getProducto().getDescripcion());
      jTextField3.setText(productoAlmacen.getProducto().getProveedor().getNombre());
      jTextField4.setText(String.valueOf(productoAlmacen.getProducto().getPrecio().getPrecio_contado()));
      jTextField5.setText(String.valueOf(productoAlmacen.getCantidad()));
      llenarComboLocalizacion();
      //Pone las unidades en el area en caso de no haber echo click en el jcombo
        List<Localizacion> lista=new FacadeLocalizacion().buscarxdes(jComboBox2.getSelectedItem().toString(),String.valueOf(productoAlmacen.getId()));
        if(lista.size()!=0){
        Localizacion loc=lista.get(0);
        jTextField9.setText(String.valueOf(loc.getCantidad()));
        }
      
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!jTextField1.getText().equals("")){
        buscarProducto();
        }
        if(jTextField1.getText().equals("")){
        cargarTablaProducto();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(productoAlmacen!=null && !jTextField6.getText().equals("")){ 
       float unidadesDisponibles=Float.parseFloat(jTextField5.getText());
       float unidadesRequeridas=Float.parseFloat(jTextField6.getText());
       
       //Pone las unidades en el area en caso de no haber echo click en el jcombo
        List<Localizacion> lista=new FacadeLocalizacion().buscarxdes(jComboBox2.getSelectedItem().toString(),String.valueOf(productoAlmacen.getId()));
        if(lista.size()!=0){
        Localizacion loc=lista.get(0);
        jTextField9.setText(String.valueOf(loc.getCantidad()));
        }
       float unidaesenArea=Float.parseFloat(jTextField9.getText());
        if(unidadesRequeridas <= unidadesDisponibles){
         if(unidadesRequeridas<=unidaesenArea){   
       Vector vector=new Vector();
       vector.add(productoAlmacen.getId());
       vector.add(productoAlmacen.getProducto().getDescripcion());
       vector.add(productoAlmacen.getProducto().getTalle());
       vector.add(productoAlmacen.getProducto().getProveedor().getNombre());
       vector.add(productoAlmacen.getProducto().getPrecio().getPrecio_contado());
       vector.add(jTextField6.getText());
       vector.add(jComboBox2.getSelectedItem().toString());
       modelo2.addRow(vector);
       jTable2.setModel(modelo2);
       limpiarCampos();
       calcularTotal();
        }else{JOptionPane.showMessageDialog(rootPane, "Las unidades Requiridas son mayores a las disponible en esa Area");}
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "Las unidades disponibles no cubren la demanda");
        }
         } else {JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un producto y especificar la cantidad a vender");
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       int index=jTable2.getSelectedRow();
       modelo2.removeRow(index);
       jTable2.setModel(modelo2);
       limpiarCampos();
       calcularTotal();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(productoAlmacen!=null){
        BuscarCliente ventana=new BuscarCliente(this, true);
        ventana.setVisible(true);
        cliente=ventana.cliente_filtrado;
        jTextField11.setText(cliente.getApellido() +" "+ cliente.getNombre());
        }else{JOptionPane.showMessageDialog(rootPane, "Debe ingresar los produtos de la venta primero");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        JfCliente ventana=new JfCliente();
        ventana.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(Menu.opcion==1){
          if(cliente!=null){    
       //  if(jComboBox1.getSelectedItem().equals("TARJETA")){    
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("pintureriaPU");
        Venta venta=new Venta();
         Calendar fecha = Calendar.getInstance();
                        int dia=Integer.parseInt(jTextField12.getText());
                        int mes=Integer.parseInt(jTextField13.getText());
                        int año=Integer.parseInt(jTextField14.getText());
                        fecha.set(año, mes-1, dia);
                        Date fec=(Date)fecha.getTime();
        venta.setFecha(fec);
        Date hora=new Date();
        venta.setHora(hora);
        venta.setCliente(cliente);
        venta.setMonto(Float.parseFloat(jTextField7.getText()));
        venta.setAnulacion("NO");
        venta.setPagoRegistrado("SI");
        //venta.setPagoRegistrado("NO");
        venta.setUsu(JLogin.usu);
        venta.setPorcentaje_descuento(Integer.parseInt(jTextField10.getText()));
        //venta.setDescripcion(jComboBox1.getSelectedItem().toString());
        /// cargar detalle de Venta
        ArrayList<Detalle_Venta> ldv = new ArrayList<Detalle_Venta>();
        for(int i=0; i< jTable2.getRowCount(); i++ ){
        Detalle_Venta dv=new Detalle_Venta();    
        List<Producto> lp=new FacadeProducto().buscarxnombre(String.valueOf(jTable2.getValueAt(i, 1)).toUpperCase());
        dv.setProducto(lp.get(0));
        dv.setCantidad(Integer.parseInt(jTable2.getValueAt(i, 5).toString()));
        dv.setMonto(Float.valueOf(jTable2.getValueAt(i, 4).toString()));
        ldv.add(dv);
        }
        venta.setDetalle_venta(ldv);
        //llenar Tipo de venta
        Tipo_Venta tv= new Tipo_Venta();
        /*tv.setAnticipo(Float.parseFloat(jTextField15.getText()));
        tv.setCant_cuotas(Integer.parseInt(jTextField8.getText()));
        tv.setTipo(jComboBox1.getSelectedItem().toString());
        tv.setTajeta(tarjeta);
        tv.setDescuento(tarjeta.getDescuento());*/
        //llenar tipo de pago
        tipopago=new Tipo_Pago();
        //modifique para jimi comente y deje solo contado
        int tamaniolc=listacheques.size();
        if(tamaniolc!=0){
        tipopago.setCheques(listacheques);
        }
        if(contado!=null){
        tipopago.setContado(contado);
        }
        int tamaniocc=listacuentac.size();
        if(tamaniocc!=0){
        tipopago.setCuentacorrientes(listacuentac);
        }
        int tamaniot=listatar.size();
        if(tamaniot!=0){
        tipopago.setTarjetas(listatar);
        }
        //if(!jTextField7.equals("")){
        //contado.setEntrega(Float.parseFloat(jTextField7.getText()));
        //tipopago.setContado(contado);
        //}
        //hasta aca
        //Agrego para jimmi lo del combo 
        venta.setDescripcion(jComboBox1.getSelectedItem().toString());
        tv.setTipo_pago(tipopago);
        ArrayList<Detalle_tipo_venta> ldtv=new ArrayList<Detalle_tipo_venta>();
        
        //llenar detalle tipo de venta
       /* for(int i=0; i< jTable3.getRowCount();i++){
            try {
                Detalle_tipo_venta dtv=new Detalle_tipo_venta();
                dtv.setNro_cuota(Integer.parseInt(jTable3.getValueAt(i, 0).toString()));
                //dtv.setFecha_pago();
                SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                Date nuevaFecha = null;
                nuevaFecha = formatoFecha.parse(jTable3.getValueAt(i,1).toString());
                dtv.setFecha_pago(nuevaFecha);
                dtv.setMonto(Float.parseFloat(jTable3.getValueAt(i, 2).toString()));
                dtv.setEstado(jTable3.getValueAt(i, 3).toString());
                ldtv.add(dtv);
            } catch (ParseException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        tv.setDetalleTipoVenta(ldtv);*/
        venta.setTipoventa(tv);
        VentaJpaController vjp= new VentaJpaController(emf);
        vjp.create(venta);
        
        // Modificar Almacen y los productos en el area
        for(int i=0; i< jTable2.getRowCount(); i++ ){
            try {
                Almacen almacen= new Almacen();
                //List<Almacen> la=new FacadeAlmacen().buscarxnombre(String.valueOf(jTable2.getValueAt(i, 1)).toUpperCase());
                List<Almacen> la=new FacadeAlmacen().buscarxid(Long.parseLong(jTable2.getValueAt(i, 0).toString()));
                almacen=la.get(0);
                float cantalmacen=Float.parseFloat(la.get(0).getCantidad());
                float cantvendida=Float.parseFloat(jTable2.getValueAt(i, 5).toString());
                almacen.setProducto(la.get(0).getProducto());
                almacen.setCantidad(String.valueOf(cantalmacen-cantvendida));
                almacen.setAlerta(la.get(0).getAlerta());
                almacen.setLocalizacion(la.get(0).getLocalizacion());
                AlmacenJpaController ajp=new AlmacenJpaController(emf);
                ajp.edit(almacen);
                
                Localizacion lo= new Localizacion();
               // List<Localizacion> llo=new FacadeLocalizacion().buscarxdes(jTable2.getValueAt(i, 6).toString());
                List<Localizacion> llo=new FacadeLocalizacion().buscarxdes(jTable2.getValueAt(i, 6).toString(),jTable2.getValueAt(i, 0).toString());
                lo=llo.get(0);
                float cantidadlocal=lo.getCantidad();
                lo.setCantidad(cantidadlocal-cantvendida);
                LocalizacionJpaController ljc= new LocalizacionJpaController(emf);
                ljc.edit(lo);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // Actualizar la Cuenta del cliente (se actualiza cuando el tipo de pago pertenece a Cuenta corriente)
        if(listacuentac.size()!=0){
            try {
                Cuenta_Cliente cuenta=new Cuenta_Cliente();
                List<Cuenta_Cliente> lista=new FacadeCuentaCliente().buscarxdoc(cliente.getId());
                cuenta=lista.get(0);
                ArrayList<Detalle_Cuenta_Cliente> listacuenta=new ArrayList<Detalle_Cuenta_Cliente>();
                      //for(int i=0; i< jTable3.getRowCount();i++){
                      for(int i=0; i< 1;i++){
                   
                        Detalle_Cuenta_Cliente dtc=new Detalle_Cuenta_Cliente();
                        //dtc.setNro_cuota(Integer.parseInt(jTable3.getValueAt(i, 0).toString()));
                        dtc.setNro_cuota(listacuentac.get(i).getNro_cuota());
                        //dtv.setFecha_pago();
                        //SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                        //Date nuevaFecha = null;
                        //nuevaFecha = formatoFecha.parse(jTable3.getValueAt(i,1).toString());
                        Date nuevaFecha = listacuentac.get(i).getFecha_pago();
                        dtc.setFecha_vencimiento(nuevaFecha);
                        //dtc.setMonto_cuota(Float.parseFloat(jTable3.getValueAt(i, 2).toString()));
                        dtc.setMonto_cuota(listacuentac.get(i).getMonto_cuota());
                        //dtc.setEstado(jTable3.getValueAt(i, 3).toString());
                        dtc.setEstado(listacuentac.get(i).getEstado());
                        dtc.setVenta(venta);
                        //dtc.setCantidad_cuota(Integer.parseInt(jTextField8.getText()));
                        dtc.setCantidad_cuota(listacuentac.get(i).getCantidad_cuotas());
                        //dtc.setTipo_pago(venta.getTipoventa().getTipo());
                        dtc.setTipo_pago("Cuenta Corriente");
                        dtc.setAnulacion("NO");
                        listacuenta.add(dtc);
                   
                  }
                        cuenta.setDetalle(listacuenta);
                        
                        Cuenta_ClienteJpaController ccjc=new Cuenta_ClienteJpaController(emf);
                        ccjc.edit(cuenta);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       // JfFactura ventana=new JfFactura();
       // ventana.setVisible(true);
       // }
        /*if(jComboBox1.getSelectedItem().equals("CONTADO")){
        EntityManagerFactory emf=Persistence.createEntityManagerFactory("pintureriaPU");
        Venta venta=new Venta();
         Calendar fecha = Calendar.getInstance();
                        int dia=Integer.parseInt(jTextField12.getText());
                        int mes=Integer.parseInt(jTextField13.getText());
                        int año=Integer.parseInt(jTextField14.getText());
                        fecha.set(año, mes-1, dia);
                        Date fec=(Date)fecha.getTime();
        venta.setFecha(fec);
        venta.setCliente(cliente);
        venta.setMonto(Float.parseFloat(jTextField7.getText()));
        venta.setAnulacion("NO");
        venta.setDescripcion(jComboBox1.getSelectedItem().toString());
        /// cargar detalle de Venta
        ArrayList<Detalle_Venta> ldv = new ArrayList<Detalle_Venta>();
        for(int i=0; i< jTable2.getRowCount(); i++ ){
        Detalle_Venta dv=new Detalle_Venta();    
        List<Producto> lp=new FacadeProducto().buscarxnombre(String.valueOf(jTable2.getValueAt(i, 1)).toUpperCase());
        dv.setProducto(lp.get(0));
        dv.setCantidad(Integer.parseInt(jTable2.getValueAt(i, 4).toString()));
        dv.setMonto(Float.valueOf(jTable2.getValueAt(i, 3).toString()));
        ldv.add(dv);
        }
        venta.setDetalle_venta(ldv);
        //llenar Tipo de venta
        Tipo_Venta tv= new Tipo_Venta();
        tv.setAnticipo(0);
        tv.setCant_cuotas(1);
        tv.setTipo(jComboBox1.getSelectedItem().toString());
        tv.setTajeta(null);
        //tv.setDescuento(null);
        
        ArrayList<Detalle_tipo_venta> ldtv=new ArrayList<Detalle_tipo_venta>();
        
        //llenar detalle tipo de venta
        for(int i=0; i< jTable3.getRowCount();i++){
                Detalle_tipo_venta dtv=new Detalle_tipo_venta();
                dtv.setNro_cuota(1);
                //dtv.setFecha_pago();
                SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                Date nuevaFecha = null;
                nuevaFecha = fec;
                dtv.setFecha_pago(nuevaFecha);
                dtv.setMonto(Float.parseFloat(jTextField7.getText()));
                dtv.setEstado("SIN PAGAR");
                ldtv.add(dtv);
            
        }
        tv.setDetalleTipoVenta(ldtv);
        venta.setTipoventa(tv);
        VentaJpaController vjp= new VentaJpaController(emf);
        vjp.create(venta);
        
        // Modificar Almacen
        for(int i=0; i< jTable2.getRowCount(); i++ ){
            try {
                Almacen almacen= new Almacen();
                List<Almacen> la=new FacadeAlmacen().buscarxnombre(String.valueOf(jTable2.getValueAt(i, 1)).toUpperCase());
                almacen=la.get(0);
                int cantalmacen=Integer.parseInt(la.get(0).getCantidad());
                int cantvendida=Integer.parseInt(jTable2.getValueAt(i, 4).toString());
                almacen.setProducto(la.get(0).getProducto());
                almacen.setCantidad(String.valueOf(cantalmacen-cantvendida));
                almacen.setAlerta(la.get(0).getAlerta());
                almacen.setAlerta(la.get(0).getLocalizacion());
                AlmacenJpaController ajp=new AlmacenJpaController(emf);
                ajp.edit(almacen);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // Actualizar la Cuenta del cliente (se actualiza cuando el tipo de pago pertenece a tarjeta)
        if(jComboBox1.getSelectedItem().equals("TARJETA")){
            try {
                Cuenta_Cliente cuenta=new Cuenta_Cliente();
                List<Cuenta_Cliente> lista=new FacadeCuentaCliente().buscarxdoc(cliente.getId());
                cuenta=lista.get(0);
                ArrayList<Detalle_Cuenta_Cliente> listacuenta=new ArrayList<Detalle_Cuenta_Cliente>();
                      //for(int i=0; i< jTable3.getRowCount();i++){
                      for(int i=0; i< 1;i++){
                    try {
                        Detalle_Cuenta_Cliente dtc=new Detalle_Cuenta_Cliente();
                        dtc.setNro_cuota(Integer.parseInt(jTable3.getValueAt(i, 0).toString()));
                        //dtv.setFecha_pago();
                        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                        Date nuevaFecha = null;
                        nuevaFecha = formatoFecha.parse(jTable3.getValueAt(i,1).toString());
                        dtc.setFecha_vencimiento(nuevaFecha);
                        dtc.setMonto_cuota(Float.parseFloat(jTable3.getValueAt(i, 2).toString()));
                        dtc.setEstado(jTable3.getValueAt(i, 3).toString());
                        dtc.setVenta(venta);
                        dtc.setCantidad_cuota(Integer.parseInt(jTextField8.getText()));
                        dtc.setTipo_pago(venta.getTipoventa().getTipo());
                        dtc.setAnulacion("NO");
                        listacuenta.add(dtc);
                    } catch (ParseException ex) {
                        Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
                    }
                  }
                        cuenta.setDetalle(listacuenta);
                        
                        Cuenta_ClienteJpaController ccjc=new Cuenta_ClienteJpaController(emf);
                        ccjc.edit(cuenta);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        JfFactura ventana=new JfFactura();
        ventana.setVisible(true);          
         }*/
        JOptionPane.showMessageDialog(rootPane, "La operacion se Realizo con exito");
        jButton8.setEnabled(true);
        jButton4.setEnabled(false);
        //Agrego para para q se registre el pago de la venta desde aca
         PagoCliente registrarPago=new PagoCliente();
         registrarPago.setAnulacion("NO");
         registrarPago.setFechapago(fec);
         registrarPago.setMonto(Float.parseFloat(jTextField7.getText()));
         registrarPago.setVenta(venta);
         PagoClienteJpaController pjc=new PagoClienteJpaController(emf);
         pjc.create(registrarPago);
         // Agrego para cargar la tabla de vuelta actualizada con el stock
        if(!jTextField1.getText().equals("")&&jTextField8.getText().equals("")){
        buscarProducto();
        }
        if(jTextField1.getText().equals("")&&jTextField8.getText().equals("")){
        cargarTablaProducto();
        }
        if(jTextField1.getText().equals("")&&!jTextField8.getText().equals("")){
        buscarxcodigo();
        }
        bloquearBotones();
        
        //this.dispose();
        }else {JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un cliente para la venta");
        }
        }
        if(Menu.opcion==2){
            validarenCaja();
            if(validarcajacerrada==0){
                       
            if(venta.getPagoRegistrado().equals("SI")){
            try {
                EntityManagerFactory emf=Persistence.createEntityManagerFactory("pintureriaPU");
                venta.setAnulacion("SI");
                //modificar la cuenta del cliente anular la venta
                 
                VentaJpaController vjc=new VentaJpaController(emf);
                vjc.edit(venta);
                
                //Actualizar el almacen con el regreso de los elementos de la venta
                // 3 precio 4 cantidad
                for(int i=0; i<venta.getDetalle_venta().size();i++){
                List<Almacen>lista=new FacadeAlmacen().buscarxid(venta.getDetalle_venta().get(i).getProducto().getId());
                Almacen almacen=lista.get(0);
                // cantidad a devolver
                float cantidaddevol=venta.getDetalle_venta().get(i).getCantidad();
                //cantidad en Stock
                float cantidadStock=Float.parseFloat(almacen.getCantidad());
                almacen.setCantidad(String.valueOf(cantidadStock+cantidaddevol));
                AlmacenJpaController ajc=new AlmacenJpaController(emf);
                ajc.edit(almacen);
                
                //Devuelve en la localizacion el primer q encuentre con el id de almacen
                List<Localizacion> listalocalizacion=new FacadeLocalizacion().buscarxAlmance(String.valueOf(almacen.getId()));
                Localizacion loc=listalocalizacion.get(0);
                float cantidadenzona=loc.getCantidad();
                loc.setCantidad(cantidadenzona+cantidaddevol);
                LocalizacionJpaController ljc=new LocalizacionJpaController(emf);
                
                }
                
                JOptionPane.showMessageDialog(rootPane, "la Venta fue anulada");
                this.dispose();
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(JfVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
         } else{JOptionPane.showMessageDialog(rootPane, "La venta no puede ser anulada por q su pago ya fue Registrado");
            }
            }else{JOptionPane.showMessageDialog(rootPane, "No se puede Anular la Venta por que la caja ya fue cerrada");}
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if(Menu.opcion==1){
        if(productoAlmacen!=null){
        totalfiltrado=Float.parseFloat(jTextField7.getText());
        FormadePago ventana=new FormadePago(this, true);
        ventana.setVisible(true);
        listacheques=ventana.listacheques;
        listatar=ventana.listatar;
        listacuentac=ventana.listacuenta;
        entrega=ventana.entrega;
        contado=ventana.contado; 
            //System.out.println("Cheques"+String.valueOf(listacheques.size()));
            //System.out.println("Tarjeta"+String.valueOf(listatar.size()));
        jButton4.setEnabled(true);
         }else {JOptionPane.showMessageDialog(rootPane, "Debe ingresar los produtos de la venta primero");
         }
        }
        if(Menu.opcion==2){
        totalfiltrado=Float.parseFloat(jTextField7.getText());
        FormadePago ventana=new FormadePago(this, true);
        ventana.setVisible(true);
        listacheques=ventana.listacheques;
        listatar=ventana.listatar;
        listacuentac=ventana.listacuenta;
        entrega=ventana.entrega;
        contado=ventana.contado; 
        jButton4.setEnabled(true);
         
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(facturaemitida==0){
        JfFactura ventana=new JfFactura();
        ventana.setVisible(true);
        facturaemitida=ventana.emitido;
        jButton8.setEnabled(false);
        }
        if(facturaemitida==1){
        jButton8.setEnabled(false);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyTyped
        // TODO add your handling code here: 
      if (jTextField12.getText().length()==2){
       evt.consume();
      }
    }//GEN-LAST:event_jTextField12KeyTyped

    private void jTextField13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyTyped
        // TODO add your handling code here:
      if (jTextField13.getText().length()==2){
       evt.consume();
      }
    }//GEN-LAST:event_jTextField13KeyTyped

    private void jTextField14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyTyped
        // TODO add your handling code here:
       if (jTextField14.getText().length()==4){
       evt.consume();
      }
    }//GEN-LAST:event_jTextField14KeyTyped

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if(!jTextField8.getText().equals("")){
        buscarxcodigo();
        }
        if(jTextField8.getText().equals("")){
        cargarTablaProducto();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        List<Localizacion> lista=new FacadeLocalizacion().buscarxdes(jComboBox2.getSelectedItem().toString(),String.valueOf(productoAlmacen.getId()));
        if(lista.size()!=0){
        Localizacion loc=lista.get(0);
        jTextField9.setText(String.valueOf(loc.getCantidad()));
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if(!jTextField10.getText().equals("0") && !jTextField10.getText().equals("")){
        int porcentaje=Integer.parseInt(jTextField10.getText());
        float total=Float.parseFloat(jTextField7.getText());
        float resultporc=(total*porcentaje)/100;
        float toltalnuevo=total-resultporc;
        jTextField7.setText(String.valueOf(toltalnuevo));
        }else{
        jTextField10.setText("0");
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        // TODO add your handling code here:
      float k = (float) evt.getKeyChar(); 
      if (k >= 97 && k <= 122 || k >= 65 && k <= 90) { 
      evt.consume(); 
      JOptionPane.showMessageDialog(null, "No puede ingresar Letras!!!", "Error Datos", JOptionPane.ERROR_MESSAGE); 
      }
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyTyped
        // TODO add your handling code here:
      float k = (float) evt.getKeyChar(); 
      if (k >= 97 && k <= 122 || k >= 65 && k <= 90) { 
      evt.consume(); 
      JOptionPane.showMessageDialog(null, "No puede ingresar Letras!!!", "Error Datos", JOptionPane.ERROR_MESSAGE); 
      }
    }//GEN-LAST:event_jTextField10KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfVenta().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
    if(Menu.opcion==1){    
    jTextField1.setEnabled(true);
    jTextField2.setEnabled(false);
    jTextField3.setEnabled(false);
    jTextField4.setEnabled(false);
    jTextField5.setEnabled(false);
    jTextField6.setEnabled(true);
    jTextField7.setEnabled(true);
    jTextField11.setEnabled(false);
    jTextField12.setEnabled(false);
    jTextField13.setEnabled(false);
    jTextField14.setEnabled(false);
    jTextField9.setEnabled(false);    
    jTextField10.setEnabled(true);
    jTextField10.setText("0");
    //jTextField15.setEnabled(false);
    jButton1.setEnabled(true);
    jButton2.setEnabled(true);
    jButton3.setEnabled(true);
    jButton4.setEnabled(false);
    jButton5.setEnabled(true);
    jButton8.setEnabled(false);
    //jComboBox1.setEnabled(true);
    //jComboBox2.setEnabled(false);
    cargarTablaProducto();
    inicializarTabla2();
    establecerFecha();
    //para jimmi pone cliente General
    llenarClienteGeneral();
    }
    if(Menu.opcion==2){
     jTextField1.setEnabled(false);
    jTextField2.setEnabled(false);
    jTextField3.setEnabled(false);
    jTextField4.setEnabled(false);
    jTextField5.setEnabled(false);
    jTextField6.setEnabled(false);
    jTextField7.setEnabled(false);
    jTextField11.setEnabled(false);
    jTextField12.setEnabled(false);
    jTextField13.setEnabled(false);
    jTextField14.setEnabled(false);
    jButton1.setEnabled(false);
    jButton2.setEnabled(false);
    jButton3.setEnabled(false);
    jButton4.setEnabled(true);
    jButton5.setEnabled(true);
    jButton8.setEnabled(false);
    jTextField9.setEnabled(false);
    jTextField10.setEnabled(false);
    //jComboBox1.setEnabled(true);
    //jComboBox2.setEnabled(false);
    cargarTablaProducto();
    inicializarTabla2();
        BuscarVentaAnular ventana=new BuscarVentaAnular(this, true);
    ventana.setVisible(true);
    venta=ventana.venta;
    CargarDatos();
    }
     if(Menu.opcion==4){
     jTextField1.setEnabled(false);
    jTextField2.setEnabled(false);
    jTextField3.setEnabled(false);
    jTextField4.setEnabled(false);
    jTextField5.setEnabled(false);
    jTextField6.setEnabled(false);
    jTextField7.setEnabled(false);
    jTextField11.setEnabled(false);
    jTextField12.setEnabled(false);
    jTextField13.setEnabled(false);
    jTextField14.setEnabled(false);
    jButton1.setEnabled(false);
    jButton2.setEnabled(false);
    jButton3.setEnabled(false);
    jButton4.setEnabled(true);
    jButton5.setEnabled(true);
    jButton8.setEnabled(false);
    jTextField9.setEnabled(false);
    jTextField10.setEnabled(false);
    //jComboBox1.setEnabled(true);
    //jComboBox2.setEnabled(false);
    cargarTablaProducto();
    inicializarTabla2();
    BuscarVentaGenerica ventana=new BuscarVentaGenerica(this, true);
    ventana.setVisible(true);
    venta=ventana.venta;
    CargarDatos();
    }
     if(Menu.opcion==5){
    jTextField1.setEnabled(false);
    jTextField2.setEnabled(false);
    jTextField3.setEnabled(false);
    jTextField4.setEnabled(false);
    jTextField5.setEnabled(false);
    jTextField6.setEnabled(false);
    jTextField7.setEnabled(false);
    jTextField11.setEnabled(false);
    jTextField12.setEnabled(false);
    jTextField13.setEnabled(false);
    jTextField14.setEnabled(false);
    jButton1.setEnabled(false);
    jButton2.setEnabled(false);
    jButton3.setEnabled(false);
    jButton4.setEnabled(true);
    jButton5.setEnabled(true);
    jButton8.setEnabled(false);
    jTextField9.setEnabled(false);
    jTextField10.setEnabled(false);
    //jComboBox1.setEnabled(true);
    //jComboBox2.setEnabled(false);
    cargarTablaProducto();
    inicializarTabla2();
    //BuscarVentaGenerica ventana=new BuscarVentaGenerica(this, true);
    //ventana.setVisible(true);
    venta=JfCaja.venta;
    CargarDatos();
     }
     if(JLogin.usu.getTipo().equals("ADMINISTRADOR")){
     jTextField12.setEnabled(true);
    jTextField13.setEnabled(true);
    jTextField14.setEnabled(true);
    }
    }
    
    public void llenarComboTarjeta(){
     DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
     List<Tarjeta> lista;
     lista=new FacadeTarjeta().listar();
     if(lista.get(0).getId()!=null){
      for(int i=0;  i < lista.size(); i++){
      Vector vector = new Vector();
      vector.add(lista.get(i).getNombre());
      modeloCombo.addElement(lista.get(i).getNombre());
     }
     //jComboBox2.setModel(modeloCombo);            
     }
    }
    public void cargarTablaProducto(){
        EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<Almacen> listaproducto= new FacadeAlmacen().listar(0);
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Producto");
         modeloTabla.addColumn("Talle");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Precio");
        modeloTabla.addColumn("Unidades Disponibles");
       // modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        vector.add(listaproducto.get(i).getProducto().getDescripcion());
        vector.add(listaproducto.get(i).getProducto().getTalle());
        vector.add(listaproducto.get(i).getProducto().getProveedor().getNombre());
        vector.add(listaproducto.get(i).getProducto().getPrecio().getPrecio_contado());
        vector.add(listaproducto.get(i).getCantidad());
        //vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }

    private void buscarProducto() {
       EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<Almacen> listaproducto= new FacadeAlmacen().buscarxnombre(jTextField1.getText().toUpperCase());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Producto");
        modeloTabla.addColumn("Talle");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Precio");
        modeloTabla.addColumn("Unidades Disponibles");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        vector.add(listaproducto.get(i).getProducto().getDescripcion());
        vector.add(listaproducto.get(i).getProducto().getTalle());
        vector.add(listaproducto.get(i).getProducto().getProveedor().getNombre());
        vector.add(listaproducto.get(i).getProducto().getPrecio().getPrecio_contado());
        vector.add(listaproducto.get(i).getCantidad());
       // vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }
        private void buscarxcodigo() {
       EntityManagerFactory emf= Persistence.createEntityManagerFactory("pintureriaPU");
        List<Almacen> listaproducto= new FacadeAlmacen().buscarxcod(jTextField8.getText());
        DefaultTableModel modeloTabla=new DefaultTableModel();
        modeloTabla.addColumn("Id");
        modeloTabla.addColumn("Producto");
        modeloTabla.addColumn("Talle");
        modeloTabla.addColumn("Proveedor");
        modeloTabla.addColumn("Precio");
        modeloTabla.addColumn("Unidades Disponibles");
        //modeloTabla.addColumn("Localizacion");
        
        
        for(int i=0; i<listaproducto.size(); i++){
        Vector vector=new Vector();
        vector.add(listaproducto.get(i).getId());
        vector.add(listaproducto.get(i).getProducto().getDescripcion());
        vector.add(listaproducto.get(i).getProducto().getTalle());
        vector.add(listaproducto.get(i).getProducto().getProveedor().getNombre());
        vector.add(listaproducto.get(i).getProducto().getPrecio().getPrecio_contado());
        vector.add(listaproducto.get(i).getCantidad());
        //vector.add(listaproducto.get(i).getLocalizacion());
        modeloTabla.addRow(vector);
        }
        jTable1.setModel(modeloTabla);
    }
    public void limpiarCampos(){
    jTextField2.setText("");
    jTextField3.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
    jTextField6.setText("");
    jTextField9.setText("");
    }
    public void limpiaCampoTarjeta(){
    //jTextField8.setText("");
    //jTextField9.setText("");
    //jTextField10.setText("");
    }
    public void inicializarTabla2(){
       modelo2.addColumn("Id");
       modelo2.addColumn("Producto");
       modelo2.addColumn("Talle");
       modelo2.addColumn("Proveedor");
       modelo2.addColumn("Precio");
       modelo2.addColumn("Cantidad");
       modelo2.addColumn("Localizacion");
       jTable2.setModel(modelo2);
    }

    private void calcularTotal() {
    float total=0;    
    for(int i=0; i<jTable2.getRowCount();i++){
    float precio= Float.parseFloat(jTable2.getValueAt(i, 4).toString());
    float cantidad=Float.parseFloat(jTable2.getValueAt(i, 5).toString());
    float calculo= precio*cantidad;
    total=total+calculo;
    }
    jTextField7.setText(String.valueOf(total));
     if(!jTextField10.getText().equals("0") && !jTextField10.getText().equals("")){
        int porcentaje=Integer.parseInt(jTextField10.getText());
        float totalp=Float.parseFloat(jTextField7.getText());
        float resultporc=(totalp*porcentaje)/100;
        float totalnuevo=total-resultporc;
        jTextField7.setText(String.valueOf(totalnuevo));
        }else{
        jTextField10.setText("0");
        }
    }
     private void establecerFecha() {
        //Calendar fecha = Calendar.getInstance();
        Date d=new Date(); 
                int dia1=d.getDate();
                int mes1=d.getMonth()+1;
                int anio1=d.getYear()+1900;
               jTextField12.setText(String.valueOf(dia1));
               jTextField13.setText(String.valueOf(mes1));
               jTextField14.setText(String.valueOf(anio1));
    }

    private void llenarTablaCuotas() {
    Date d=new Date(); 
    int dia1=d.getDate();
    int mes1=d.getMonth()+1;
    int anio1=d.getYear()+1900;
    String fecha_hoy=dia1+"/"+mes1+"/"+anio1;
   // int nro_cuotas=Integer.parseInt(jTextField8.getText());
    int contador=1;
   // float monto=Float.parseFloat(jTextField9.getText());
    DefaultTableModel modelo3=new DefaultTableModel();
    Vector<String> columnas = new Vector<String>();
    modelo3.addColumn("nro de cuota");
    modelo3.addColumn("fecha de pago");
    modelo3.addColumn("monto");
    modelo3.addColumn("estado");
    int año;
    int dia=dia1;
    int mes=mes1+1;
    int contafec=mes;
    String fec;
/*
    for(int i=0; i< nro_cuotas; i++){
     if(contafec>12){
            mes=1;
            contafec=1;
            año=anio1+1 ;
            anio1=año;
        }else
        {   
            año=anio1;
        }
         fec=String.valueOf(dia)+"/"+String.valueOf(mes)+"/"+String.valueOf(año);
        
        
      Vector vector = new Vector();
      vector.add(contador);
      vector.add(fec);
      //vector.add(monto);
      vector.add("SIN PAGAR");
      modelo3.addRow(vector);
       mes=mes+1;
       contafec=mes;
       contador++;
              
    }*/
    //jTable3.setModel(modelo3);
    }

    private void CargarDatos() {
        Date d=venta.getFecha(); 
                int dia1=d.getDate();
                int mes1=d.getMonth()+1;
                int anio1=d.getYear()+1900;
               jTextField12.setText(String.valueOf(dia1));
               jTextField13.setText(String.valueOf(mes1));
               jTextField14.setText(String.valueOf(anio1));
     // Llenar Detalle de Venta
     for(int i=0; i < venta.getDetalle_venta().size(); i++){
       Vector vector=new Vector();
       if(venta.getDetalle_venta().get(i).getProducto()!=null){
        vector.add(venta.getDetalle_venta().get(i).getProducto().getId());
       vector.add(venta.getDetalle_venta().get(i).getProducto().getDescripcion());
       vector.add(venta.getDetalle_venta().get(i).getProducto().getTalle());
       vector.add(venta.getDetalle_venta().get(i).getProducto().getProveedor().getNombre());
       vector.add(venta.getDetalle_venta().get(i).getMonto());
       vector.add(venta.getDetalle_venta().get(i).getCantidad());
       }
       if(venta.getDetalle_venta().get(i).getProductocompuesto()!=null){
       vector.add(venta.getDetalle_venta().get(i).getProductocompuesto().getId());
       vector.add(venta.getDetalle_venta().get(i).getProductocompuesto().getDescripcion());
       vector.add("");
       vector.add("NEGOCIO");
       vector.add(venta.getDetalle_venta().get(i).getMonto());
       vector.add(venta.getDetalle_venta().get(i).getCantidad());
       }
       
       modelo2.addRow(vector);
     }
     jTable2.setModel(modelo2);
     
    //llenar Cliente
     jTextField11.setText(venta.getCliente().getNombre());
     jTextField10.setText(String.valueOf(venta.getPorcentaje_descuento()));

     calcularTotal();
     
    /*
     // Tipo de venta
     jComboBox1.setSelectedItem(venta.getTipoventa().getTipo());
     if(!venta.getTipoventa().getTajeta().getNombre().equals("")){
      jComboBox2.setSelectedItem(venta.getTipoventa().getTajeta().getNombre());
      jTextField10.setText(String.valueOf(venta.getTipoventa().getTajeta().getCant_cuotas()));
      jTextField8.setText(String.valueOf(venta.getTipoventa().getCant_cuotas()));
      jTextField15.setText(String.valueOf(venta.getTipoventa().getAnticipo()));
     }
        calcularTotal();
        
         float anticipo=Float.parseFloat(jTextField15.getText());
        jTextField7.setText(String.valueOf(Float.parseFloat(jTextField7.getText())-anticipo));
        float monto= Float.parseFloat(jTextField7.getText());
        int descuento=tarjeta.getDescuento();
        float porcentaje= (monto*descuento)/100;
        float total= (monto-porcentaje);
        float mon=total/Integer.parseInt(jTextField8.getText());
        jTextField9.setText(String.valueOf(mon));
        llenarTablaCuotas();
    */
    }

    private void llenarClienteGeneral() {
    List<Cliente> lcliente=new FacadeCliente().buscarxnombre("CLIENTE", "GENERAL");
    cliente=lcliente.get(0);
    jTextField11.setText(cliente.getApellido()+""+cliente.getNombre());
    jButton9.setVisible(false);
    jLabel10.setVisible(false);
    }

   private void llenarComboLocalizacion() {
    DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
     List<Localizacion> lista;
     lista=new FacadeLocalizacion().buscarxAlmance(String.valueOf(productoAlmacen.getId()));
     if(lista.get(0).getId()!=null){
     for(int i=0;  i < lista.size(); i++){
      Vector vector = new Vector();
      vector.add(lista.get(i).getDescripcion());
      modeloCombo.addElement(lista.get(i).getDescripcion());
     }
     
     jComboBox2.setModel(modeloCombo);
     }  
    }
    public void bloquearBotones(){
    jButton1.setEnabled(false);
    jButton2.setEnabled(false);
    jButton3.setEnabled(false);
    jButton4.setEnabled(false);
    jButton5.setEnabled(true);
    jButton6.setEnabled(false);
    jButton7.setEnabled(false);
    jButton8.setEnabled(true);
    jButton9.setEnabled(false);
    jButton10.setEnabled(false);
    jTextField1.setEnabled(false);
    jTextField6.setEnabled(false);
    jTextField8.setEnabled(false);
    jTextField10.setEnabled(false);
    jTextField11.setEnabled(false);
    }
    
    public void validarenCaja(){
    EntityManagerFactory emf=Persistence.createEntityManagerFactory("pintureriaPU");
    Date horaventa=venta.getHora();
    List<Caja> listacaja=new FacadeCaja().buscarxCajaxhora(horaventa);
    if(listacaja.size()==0){
    validarcajacerrada=1;
    }else{
    validarcajacerrada=0;
    }
    }
}

